# all search arguments
# has one, has_many and belongs to data
# Pagination data
# Role permission

* All Routers   
* Seed data (Role and Permission and others)
* Gurdian Authentication Api and graphql 
* Mix test fixing later

now() for postbird datetime auto insert

schema "users" do
  has_one :profile, Eshop.Users.UserProfile
end

schema "user_profiles" do
    belongs_to :company, Eshop.Companies.Company
    belongs_to :shop, Eshop.Companies.Shop
    belongs_to :user, Eshop.Users.User
    belongs_to :shop, Eshop.Companies.Shop
    belongs_to :pre_location, Eshop.Geo.Location
    belongs_to :per_location, Eshop.Geo.Location
    belongs_to :invoice, Eshop.Orders.Invoice
    belongs_to :attachment, Eshop.Attachments.Attachment
end

schema "invoices" do
  has_many :invoice_items, Eshop.Orders.InvoiceItem
end




mutation {
  updateRole(id: 2, roleParams: { name: "update value"} ) {
    name
  }
  
}



changeset
=========
    |> cast(attrs, [:fieldName, :fieldName2,])
    |> validate_required([:fieldName, :fieldName2])
    |> validate_confirmation(:password)
    |> validate_format(:email, ~r/@/)
    |> unique_constraint(:email)
    |> validate_length(:password, min: 8, max: 80)
    |> validate_length(:pin, min: 4, max: 10)
    |> put_password_hash()
    |> validate_inclusion(:age, 1..18)
    |> unique_constraint(:slug)
    |> validate_number(:lat, greater_than_or_equal_to: -90, less_than_or_equal_to: 90)


query {
  roles{
    id,
    name,
    slug,
    nativeName
    isCompany
  }
}

query {
  role(id:2){
    id
    name,
    slug,
    nativeName
    isCompany
  }
}


query {
  role(id:2){
    id
    name,
    slug,
    nativeName
    isCompany
  }
}


