# Get Product
POST http://{{host}}:{{port}}{{url}}
Authorization: {{user_token}}

query {
  products(first: 5, filter: {   
    categories:[2,4] 
    brands:[3]
   	shops:[1]
  }) {
   	pageInfo {
      hasPreviousPage
      hasNextPage
    }    
    edges {
      node {
        id
        title
        hasPackage
      }
      cursor
    }
  }
}  

### Create Product
POST http://{{host}}:{{port}}{{url}}
Authorization: {{user_token}}

mutation {
  createProduct(
    typeId: 5,
    product: {
      sku: "sfds"
    }
    item: {
      brandId: 3
      title: "Test Item", 
      unitPrice: 220, 
      costPrice: 100, 
      salePrice: 100,  
    },     
    warehouses: [
      {
        warehouseVariantId: 1
        warehouseVariantValueId: 1
      }
    ]
    packages: [
      {
        title: "Pack Title",
        nativeTitle: "Pack Native Title"
        subtitle: "Subtitle",
        nativeSubtitle: "Native subtitle"
        unitPrice: 220, 
        costPrice: 100, 
        salePrice: 100,  
      },
    ], 
    categories: [ {categoryId: 4}]
    attachments: [ {attachmentId: 1}]
    ) {
    id
    title 
    item {
      title 
    }
  }
}


### Update Product
POST http://{{host}}:{{port}}{{url}}
Authorization: {{user_token}}

mutation{
  updateProduct(
    id: 1,
    itemParams: { 
      title: "Update Product", 
    }
  ){
    id,
    title, 
  }
}

